{
  "_from": "cytoscape",
  "_id": "cytoscape@3.3.1",
  "_inBundle": false,
  "_integrity": "sha512-3IIh63Oz/dtiO1ibPb9CWHBPo90JZg/74EI+vDL/hamaP01bQ7Yx1r9oiS4AyTedvlUCio5j7Bu3NtRWxJHryw==",
  "_location": "/cytoscape",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "cytoscape",
    "fetchSpec": "latest",
    "name": "cytoscape",
    "raw": "cytoscape",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/cytoscape/-/cytoscape-3.3.1.tgz",
  "_shasum": "fd393d92725ae6c8f38eb64e85f143fc0144815f",
  "_spec": "cytoscape",
  "_where": "/home/mno/normandra.github.io/4d_vis",
  "author": {
    "email": "maxkfranz@gmail.com",
    "name": "Max Franz",
    "url": "http://maxfranz.com"
  },
  "bugs": {
    "url": "https://github.com/cytoscape/cytoscape.js/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Max Franz",
      "email": "maxkfranz@gmail.com",
      "url": "http://maxfranz.com"
    },
    {
      "name": "Christian Lopes",
      "email": "chrtannus@gmail.com"
    },
    {
      "name": "Yue Dong",
      "email": "oryato@gmail.com"
    },
    {
      "name": "Onur Sumer",
      "email": "s.onur.sumer@gmail.com"
    },
    {
      "name": "Gerardo Huck",
      "email": "gerardohuck@gmail.com"
    },
    {
      "name": "Dylan Fong",
      "email": "dylanfong.ut@gmail.com"
    },
    {
      "name": "Joseph Stahl",
      "email": "joseph@josephstahl.com"
    }
  ],
  "dependencies": {
    "heap": "^0.2.6",
    "lodash.debounce": "^4.0.8"
  },
  "deprecated": false,
  "description": "Graph theory (a.k.a. network) library for analysis and visualisation",
  "devDependencies": {
    "@babel/core": "^7.1.2",
    "@babel/preset-env": "^7.1.0",
    "benchmark": "^2.1.4",
    "bluebird": "^3.5.0",
    "chai": "^4.1.2",
    "cpy-cli": "^2.0.0",
    "cross-env": "^5.1.3",
    "download-cli": "^1.0.5",
    "eslint": "^5.5.0",
    "esm": "^3.0.8",
    "gh-pages": "^2.0.1",
    "handlebars": "^4.0.5",
    "highlight.js": "^9.3.0",
    "http-server": "^0.11.1",
    "jsonlint": "^1.6.2",
    "livereload": "^0.7.0",
    "marked": "^0.5.0",
    "mocha": "^5.2.0",
    "npm-run-all": "^4.1.5",
    "rimraf": "^2.6.2",
    "rollup": "^0.67.4",
    "rollup-plugin-babel": "^4.0.3",
    "rollup-plugin-commonjs": "^9.1.0",
    "rollup-plugin-license": "^0.7.0",
    "rollup-plugin-node-resolve": "^3.3.0",
    "rollup-plugin-replace": "^2.0.0",
    "rollup-plugin-size-snapshot": "^0.7.0",
    "rollup-plugin-uglify": "^6.0.0",
    "sniper": "^0.2.17",
    "update": "^0.7.4",
    "updater-license": "^1.0.0"
  },
  "engines": {
    "node": ">=0.10"
  },
  "homepage": "http://js.cytoscape.org",
  "keywords": [
    "analysis",
    "biojs",
    "cytoscape",
    "draw",
    "edge",
    "graph",
    "graph-theory",
    "link",
    "network",
    "node",
    "render",
    "vertex",
    "visualisation",
    "visualization"
  ],
  "license": "MIT",
  "main": "dist/cytoscape.cjs.js",
  "name": "cytoscape",
  "optionalDependencies": {},
  "readme": "<div style=\"text-align: center;\" align=\"center\"><img style=\"width: 200px; height: 200px;\" src=\"https://raw.githubusercontent.com/cytoscape/cytoscape.js/unstable/documentation/img/cytoscape-logo.png\" width=\"200\" height=\"200\"></img></div>\n\n[![GitHub repo](https://img.shields.io/badge/Repo-GitHub-yellow.svg)](https://github.com/cytoscape/cytoscape.js)\n[![Twitter updates](https://img.shields.io/badge/Updates-Twitter-yellow.svg)](https://twitter.com/cytoscapejs)\n[![News and tutorials](https://img.shields.io/badge/News%20and%20tutorials-Blog-yellow.svg)](https://blog.js.cytoscape.org)\n[![Questions at StackOverflow](https://img.shields.io/badge/Questions-StackOverflow-yellow.svg)](https://stackoverflow.com/questions/tagged/cytoscape.js)\n[![Ask a question at StackOverflow](https://img.shields.io/badge/Ask%20a%20question-StackOverflow-yellow.svg)](http://stackoverflow.com/questions/ask?tags=cytoscape.js)\n[![GitHub license](https://img.shields.io/badge/License-MIT-blue.svg)](https://raw.githubusercontent.com/cytoscape/cytoscape.js/master/LICENSE)\n[![DOI](https://zenodo.org/badge/2255947.svg)](https://zenodo.org/badge/latestdoi/2255947)\n[![npm](https://img.shields.io/npm/v/cytoscape.svg)](https://www.npmjs.com/package/cytoscape)\n[![Download](https://img.shields.io/npm/v/cytoscape.svg?label=Download)](https://github.com/cytoscape/cytoscape.js/tree/master/dist)\n[![Extensions](https://img.shields.io/badge/Extensions-35-blue.svg)](http://js.cytoscape.org/#extensions)\n[![npm installs](https://img.shields.io/npm/dm/cytoscape.svg?label=npm%20installs)](https://www.npmjs.com/package/cytoscape)\n[![master branch tests](https://img.shields.io/travis/cytoscape/cytoscape.js/master.svg?label=master%20branch)](https://travis-ci.org/cytoscape/cytoscape.js)\n[![unstable branch tests](https://img.shields.io/travis/cytoscape/cytoscape.js/unstable.svg?label=unstable%20branch)](https://travis-ci.org/cytoscape/cytoscape.js)\n[![Greenkeeper badge](https://badges.greenkeeper.io/cytoscape/cytoscape.js.svg)](https://greenkeeper.io/)\n\n# Cytoscape.js\n\nGraph theory (network) library for visualisation and analysis : [http://js.cytoscape.org](http://js.cytoscape.org)\n\n## Description\n\nCytoscape.js is a fully featured [graph theory](https://en.wikipedia.org/wiki/Graph_theory) library.  Do you need to model and/or visualise relational data, like biological data or social networks?  If so, Cytoscape.js is just what you need.\n\nCytoscape.js contains a graph theory model and an optional renderer to display interactive graphs.  This library was designed to make it as easy as possible for programmers and scientists to use graph theory in their apps, whether it's for server-side analysis in a Node.js app or for a rich user interface.\n\nYou can get started with Cytoscape.js with one line:\n\n```js\nvar cy = cytoscape({ elements: myElements, container: myDiv });\n```\n\nLearn more about the features of Cytoscape.js by reading [its documentation](http://js.cytoscape.org).\n\n\n\n\n\n## Documentation\n\nYou can find the documentation and downloads on the [project website](http://js.cytoscape.org).\n\n\n\n## Roadmap\n\nFuture versions of Cytoscape.js are planned in the [milestones of the Github issue tracker](https://github.com/cytoscape/cytoscape.js/milestones).  You can use the milestones to see what's currently planned for future releases.\n\n\n\n\n## Contributing to Cytoscape.js\n\nPlease refer to [CONTRIBUTING.md](CONTRIBUTING.md).\n\n\n\n## Citation\n\nTo cite Cytoscape.js in a paper, please cite the Oxford Bioinformatics issue:\n\n*Cytoscape.js: a graph theory library for visualisation and analysis*\n\nFranz M, Lopes CT, Huck G, Dong Y, Sumer O, Bader GD\n\n[Bioinformatics (2016) 32 (2): 309-311 first published online September 28, 2015 doi:10.1093/bioinformatics/btv557 (PDF)](http://bioinformatics.oxfordjournals.org/content/32/2/309)\n\n[PubMed Abstract](http://www.ncbi.nlm.nih.gov/pubmed/26415722)\n\n\n\n\n## Build dependencies\n\nInstall `node`, `npm` and `gulp` (optional).  Of course, `npm install` before using `gulp` or `npm run`.\n\n\n\n\n## Build instructions\n\nRun `npm run <target>` in the console.  The main targets are:\n\n**Building:**\n\n * `build`: do all builds of the library (unmin, min, umd)\n * `build:unmin` : do the unminified build with bundled dependencies (for simple html pages, good for novices)\n * `build:min` : do the unminified build with bundled dependencies (for simple html pages, good for novices)\n * `build:umd` : do the umd (cjs/amd/globals) build\n * `clean` : clean the `build` directory\n * `docs` : build the docs into `documentation`\n * `release` : build all release artefacts\n * `watch` : automatically build lib for debugging (with sourcemap, no babel, very quick)\n   * good for general testing on `debug/index.html`\n   * served on `http://localhost:8080` or the first available port thereafter, with livereload on `debug/index.html`\n * `watch:babel` : automatically build lib for debugging (with sourcemap, with babel, a bit slower)\n   * good for testing performance or for testing out of date browsers\n   * served on `http://localhost:8080` or the first available port thereafter, with livereload on `debug/index.html`\n * `watch:umd` : automatically build prod umd bundle (no sourcemap, with babel)\n   * good for testing cytoscape in another project (with a `\"cytoscape\": \"file:./path/to/cytoscape\"` reference in your project's `package.json`)\n   * no http server\n * `dist` : update the distribution js for npm etc.\n\n**Testing:**\n\nIf the `TRAVIS` or `TEST_BUILD` environment variables are defined, then `mocha` or `gulp test` will test `build/cytoscape.umd.js`.  Otherwise, the unbundled, unbabelified, raw source is tested.  This keeps local tests very quick to run on modern versions of node while ensuring we can test old versions of node as well.  The library can be built on `node>=6`, but it can be tested on `node>=0.10`.\n\n * `test` : run the Mocha unit tests\n * `test:build` : run the Mocha unit tests (on a built bundle)\n * `lint` : lint the js sources via eslint\n * `ci` : run tests and linting\n * `ci:build` : run tests and linting (on a built bundle)\n * `benchmark` : run all benchmarks\n * `benchmark:single` : run benchmarks only for the suite specified in `benchmark/single`\n * `sniper` : runs a biojs sniper server that hosts demos\n\n\n\n## Release instructions\n\n 1. Do each backport patch release before the corresponding current release.  This ensures that npm lists the current version as the latest one.\n 1. Make sure the docs are updated with the list of releases in `documentation/md/intro.md`\n 1. Update the `VERSION` environment variable, e.g. `export VERSION=1.2.3`\n 1. Confirm all the tests are passing: `npm run test` (see also `test/index.html` for browser testing)\n 1. Prepare a release: `npm run release`\n 1. Review the files that were just built in the previous step.  Try out the newly-built docs and demos.\n 1. Add the the release to git: `git add . && git commit -m \"Build $VERSION\"`\n 1. Update the package version: `npm version $VERSION`\n 1. Push the release changes: `git push && git push --tags`\n 1. Publish the release to npm: `npm publish .`\n 1. [Create a release](https://github.com/cytoscape/cytoscape.js/releases/new) for Zenodo from the latest tag\n\n\n\n## Tests\n\nMocha tests are found in the [test directory](https://github.com/cytoscape/cytoscape.js/tree/master/test).  The tests can be run in the browser or they can be run via Node.js (`gulp test` or `mocha`).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/cytoscape/cytoscape.js.git"
  },
  "scripts": {
    "benchmark": "run-s benchmark:single",
    "benchmark:all": "run-s benchmark:download benchmark:all:exec",
    "benchmark:all:exec": "node benchmark/all",
    "benchmark:download": "download https://raw.githubusercontent.com/cytoscape/cytoscape.js/master/dist/cytoscape.js --out build --filename cytoscape.benchmark.js",
    "benchmark:single": "run-s benchmark:download benchmark:single:exec",
    "benchmark:single:exec": "node benchmark/single",
    "build": "rollup -c",
    "build:cjs": "cross-env FILE=cjs rollup -c",
    "build:esm": "cross-env FILE=esm rollup -c",
    "build:min": "cross-env FILE=min rollup -c",
    "build:umd": "cross-env FILE=umd rollup -c",
    "ci": "run-s test lint",
    "ci:build": "run-s build test:build lint",
    "clean": "rimraf build/*",
    "copyright": "update license",
    "dist": "cross-env NODE_ENV=production run-s build dist:*",
    "dist:copy": "cpy build/cytoscape.umd.js build/cytoscape.min.js build/cytoscape.cjs.js build/cytoscape.esm.js dist",
    "docs": "run-s docs:build docs:js",
    "docs:build": "node documentation/docmaker.js",
    "docs:js": "cpy build/cytoscape.min.js documentation/js",
    "docs:push": "gh-pages -d documentation",
    "lint": "eslint src benchmark",
    "postpublish": "run-s docs:push",
    "release": "run-s copyright dist docs",
    "sniper": "sniper .",
    "test": "mocha -r esm",
    "test:build": "cross-env TEST_BUILD=true mocha",
    "watch": "run-s watch:fast",
    "watch:build:cjs": "cross-env FILE=cjs SOURCEMAPS=true NODE_ENV=development rollup -c -w",
    "watch:build:fast": "cross-env FILE=umd SOURCEMAPS=true BABEL=false NODE_ENV=development rollup -c -w",
    "watch:build:umd": "cross-env FILE=umd SOURCEMAPS=true NODE_ENV=development rollup -c -w",
    "watch:fast": "run-p watch:sync watch:http watch:build:fast",
    "watch:http": "http-server -s -c -1 -o",
    "watch:sync": "livereload \"build, debug\"",
    "watch:umd": "run-p watch:sync watch:http watch:build:umd"
  },
  "sniper": {
    "first": "images",
    "js": [
      "/build/cytoscape.js",
      "https://cdnjs.cloudflare.com/ajax/libs/fetch/2.0.3/fetch.min.js"
    ]
  },
  "version": "3.3.1"
}
